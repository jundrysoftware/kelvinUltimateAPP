{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js","./node_modules/rxjs-compat/_esm2015/add/operator/map.js","./node_modules/rxjs-compat/_esm2015/operator/map.js","./src/app/services/category.service.ts","./src/app/services/deals.service.ts","./src/app/services/method-api-service.service.ts","./src/app/services/products.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,kCAAkC,MAAM,UAAU;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACtCrF;AAAA;AAAA;AAAkC;AACO;AACzC,+CAAU,iBAAiB,iDAAG;AAC9B,+B;;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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Observable } from 'rxjs';\nimport { map } from '../../operator/map';\nObservable.prototype.map = map;\n//# sourceMappingURL=map.js.map","import { map as higherOrderMap } from 'rxjs/operators';\nexport function map(project, thisArg) {\n    return higherOrderMap(project, thisArg)(this);\n}\n//# sourceMappingURL=map.js.map","import { Injectable } from '@angular/core';\nimport { MethodApiServiceService } from '../services/method-api-service.service';\nimport Swal from 'sweetalert2'\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  categories: any[]= [];\n\n  constructor(private _methodsApiRestService: MethodApiServiceService) { }\n\n  categoryList() {\n    this.categories = [];\n    this._methodsApiRestService.GetMethod('getAll_category_controller.php')\n      .subscribe(\n        response => {\n          if(typeof response[0] === 'undefined' || response[0] === null){\n            //swal.fire(\"Ups!\", \"Usuario no encontrado\", \"error\");\n          }else{\n            for (let x in response) {\n              let datos={\n                id:response[x].id,\n                name:response[x].name,\n                image:'assets/images/category/' + response[x].image\n              }\n              this.categories.push(datos);              \n            }\n          }\n        },\n          error => {\n            if (!error.ok) {\n              Swal.fire(\"Ups!\", \"Error en Petición\", \"error\");\n            }\n          }\n      );\n\n\n    return this.categories;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DealsService {\n\n  constructor() { }\n\n  getDeals() {\n    return [{\n      id: 1,\n      image: \"assets/images/products/deal2.jpg\",\n      title: \"Sale 50%\",\n      subTitle: \"Major pieces for upper half\"\n    }, {\n      id: 2,\n      image: \"assets/images/products/deal1.jpeg\",\n      title: \"Ease the day\",\n      subTitle: \"Cute knits for taking it easy\"\n    }, {\n      id: 3,\n      image: \"assets/images/banner-1.jpg\",\n      title: \"Step way\",\n      subTitle: \"Cause you've got places\"\n    }]\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MethodApiServiceService {\n\n  //domain=\"http://44.228.37.182:8080/api/v1\"; //Produccion\n  domain = \"http://localhost/kelvin/\";  //Desarrollo\n\n  constructor(private http:HttpClient) { }\n\n  public PostMethod(endpoint,params,domain=this.domain){\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST',\n      'Access-Control-Allow-Headers': '*'\n    });\n    //console.log(domain+endpoint);\n    \n   return this.http.post(domain+endpoint,JSON.stringify(params),{headers})\n          .map(res => res );\n  }\n\n  public GetMethod(endpoint,domain=this.domain){\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET',\n      'Access-Control-Allow-Headers': '*'\n    });\n   return this.http.get(domain+endpoint,{headers})\n          .map(res => res);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MethodApiServiceService } from '../services/method-api-service.service';\nimport Swal from 'sweetalert2'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  products: any[] = [];\n\n  constructor(private _methodsApiRestService: MethodApiServiceService) { }\n\n  productList() {\n    this.products = [];\n    this._methodsApiRestService.GetMethod('getAll_product_controller.php')\n      .subscribe(\n        response => {\n          if (typeof response[0] === 'undefined' || response[0] === null) {\n            //swal.fire(\"Ups!\", \"Usuario no encontrado\", \"error\");\n          } else {\n            for (let x in response) {\n              let datos = {\n                id: response[x].id,\n                name: response[x].name,\n                description: response[x].description,\n                price: response[x].price,\n                discountPrice: response[x].discount,\n                images: response[x].images,\n                color: response[x].colors,\n                size: response[x].sizes,\n                quantity: 1,\n                isWishlist: false\n              }\n              this.products.push(datos);          \n            }\n          }\n        },\n        error => {\n          if (!error.ok) {\n            Swal.fire(\"Ups!\", \"Error en Petición\", \"error\");\n          }\n        }\n      );\n      return this.products;\n  }\n  productListByID(idpro) {\n    this.products = [];\n    this._methodsApiRestService.GetMethod('getAll_product_controller.php?id='+idpro)\n      .subscribe(\n        response => {\n          if (typeof response[0] === 'undefined' || response[0] === null) {\n            //swal.fire(\"Ups!\", \"Usuario no encontrado\", \"error\");\n          } else {\n            for (let x in response) {\n              let datos = {\n                id: response[x].id,\n                name: response[x].name,\n                description: response[x].description,\n                price: response[x].price,\n                discountPrice: response[x].discount,\n                images: response[x].images,\n                color: response[x].colors,\n                size: response[x].sizes,\n                quantity: 1,\n                isWishlist: false\n              }\n              this.products.push(datos);          \n            }\n          }\n        },\n        error => {\n          if (!error.ok) {\n            Swal.fire(\"Ups!\", \"Error en Petición\", \"error\");\n          }\n        }\n      );\n      return this.products;\n  }\n}\n"],"sourceRoot":"webpack:///"}